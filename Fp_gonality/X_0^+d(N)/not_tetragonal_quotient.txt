NotTetragonal := function(X,p)
	C2:=ChangeRing(X,GF(p));
	FF := FunctionField(C2);
	AFF := AlgorithmicFunctionField(FF);

	pls1:=Places(AFF,1);
	pls2:=Places(AFF,2);
	pls3:=Places(AFF,3);

	s:={};

	// 1+1+1+1
	s:={};
	for i:=1 to #pls1 do
	for j:=i to #pls1 do
	for k:=j to #pls1 do
	for l:=k to #pls1 do
	s:=s  join {Dimension(RiemannRochSpace(pls1[i]+pls1[j]+pls1[k]+pls1[l]))};
	end for;
	end for;
	end for;
	end for;

	// 1+1+2
	for i:=1 to #pls1 do
	for j:=i to #pls1 do
	for k:=1 to #pls2 do
	s:=s  join {Dimension(RiemannRochSpace(pls1[i]+pls1[j]+pls2[k]))};
	end for;
	end for;
	end for;


	// 1+3
	for i:=1 to #pls1 do
	for j:=1 to #pls3 do
	s:=s  join {Dimension(RiemannRochSpace(pls1[i]+pls3[j]))};
	end for;
	end for;

	assert s eq {1};

	return 1;
end function;

for quadruple in {[228,3,19,5],[228,12,57,5],[228,4,57,5],[240,3,5,11],[240,3,16,11],[246,6,82,5],[264,3,8,5],[264,3,11,5],[264,8,11,5],[270,5,27,7],[273,7,13,5],[273,13,21,5],[273,7,39,5],[300,3,100,7],[300,12,25,7],[309,3,103,5]} do
  N:=quadruple[1];
  d1:=quadruple[2];
  d2:=quadruple[3];
  p:=quadruple[4];
  N,d1,d2,p;
  X:=X0NQuotient(N,[d1,d2]);
  NotTetragonal(X,p);
end for;
